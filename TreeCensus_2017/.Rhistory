olddensity.tot
density.all
Stand <- c("A", "B", "C", "D")
Density <- c(0,0,0,0)
St.dev <- c(0,0,0,0)
olddensity.tot <- data.frame(Stand, Density, St.dev)
olddensity.tot
Stand <- c("A", "B", "C", "D")
Density <- c(0,0,0,0)
St.dev <- c(0,0,0,0)
olddensity.tot <- data.frame(Stand, Density, St.dev)
olddensity.tot[1,2] <- mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "A",4])
olddensity.tot[2,2] <- mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "B",4])
olddensity.tot[3,2] <- mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "C",4])
olddensity.tot[4,2] <- mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "D",4])
olddensity.tot
Stand <- c("A", "B", "C", "D")
Density <- c(mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "A",4],
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "B",4],
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "C",4],
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "D",4])
St.dev <- c(0,0,0,0)
olddensity.tot <- data.frame(Stand, Density, St.dev)
olddensity.tot
Density
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "A",4]
Stand <- c("A", "B", "C", "D")
Density <- c(mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "A",4]),
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "B",4]),
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "C",4]),
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "D",4]))
St.dev <- c(0,0,0,0)
olddensity.tot <- data.frame(Stand, Density, St.dev)
olddensity.tot
Density <- c(mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "A",4]),
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "B",4]),
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "C",4]),
mean(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "D",4]))
olddensity.tot <- data.frame(Stand, Density, St.dev)
olddensity.tot
St.dev <- c(sd(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "A",4]),
sd(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "B",4]),
sd(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "C",4]),
sd(olddensity.data.subset2.stand[olddensity.data.subset2.stand$stand == "D",4]))
olddensity.tot <- data.frame(Stand, Density, St.dev)
olddensity.tot
olddensity.tot$Ymin <- olddensity.tot$Density - olddensity.tot$St.dev
olddensity.tot
olddensity.tot$Ymax <- olddensity.tot$Density + olddensity.tot$St.dev
olddensity.tot
density.all
density2.all
olddensity.data.subset2.stand
names(olddensity2.data.subset
olddensity2.data.subset
olddensity2.data.subset
olddensity.data.subset
olddensity.data.subset.stand <- merge(olddensity.data.subset, stand.data, by = "Plot")
olddensity.data.subset.stand
density.all <- rbind(density.data.stand, olddensity.data.subset.stand)
olddensity.data.subset.stand
density.data.stand
olddensity.data.subset.stand$Year <- 2011
olddensity.data.subset.stand$Year <- 2011
density.all <- rbind(density.data.stand, olddensity.data.subset.stand)
density.all
ggplot(data=density.all, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ stand, scales="free")
density.data
alltree.data
alltree.data$BA <- pi*(alltree.data$DBH/200)^2 # Units = m2
# --------------------------------------
# Filter plots in old data by those that were candidate plots for the 2017 monitoring
# Need to change naming of candidate plots
plots.data <- plots1.data
plots.data$CORNER <- paste0(substr(plots1.data$CORNER, 1, nchar(paste(plots1.data$CORNER))-4), substr(plots1.data$CORNER, nchar(paste(plots1.data$CORNER))-2,nchar(paste(plots1.data$CORNER))))
plot.list <- c("N115", "U134", "HH115", "B127")
oldtree.data.subset <- oldtree.data[oldtree.data$Plot %in% unique(plots.data$CORNER),]
oldtree.data.subset2 <- oldtree.data[oldtree.data$Plot %in% plot.list,]
# Creating stand data
stand.data <- plots.data[3:4]
names(stand.data)[1] <- "Plot"
# --------------------------------------
# Summing basal area by plot and then by each species in the plot
olddensity.data <- aggregate(as.numeric(oldtree.data[,"BA"]),
oldtree.data[,c("Plot", "Species")],
sum)
olddensity.data.subset <- aggregate(as.numeric(oldtree.data.subset[,"BA"]),
oldtree.data.subset[,c("Plot", "Species")],
sum)
density.data <- aggregate(as.numeric(alltree.data[,"BA"]),
alltree.data[,c("Plot", "Sp_code")],
sum)
names(olddensity.data)[3] <- "BA.tot"
names(olddensity.data.subset)[3] <- "BA.tot"
names(density.data)[3] <- "BA.tot"
# Actually converting to density
# Area for old plots was .025 ha, based on IMLS report sampling protocal
# Area for new plots is 400 m2, .04 ha
olddensity.data$Density <- olddensity.data$BA.tot/250 # Units m2/ha
olddensity.data.subset$Density <- olddensity.data.subset$BA.tot/250 # Units m2/ha
density.data$Density <- density.data$BA.tot/400 # Units m2/ha
# Summing number of stems per plot per species
olddensity2.data <- aggregate(oldtree.data[,"BA"],
oldtree.data[,c("Plot", "Species")],
length)
olddensity2.data.subset <- aggregate(oldtree.data.subset[,"BA"],
oldtree.data.subset[,c("Plot", "Species")],
length)
density2.data <- aggregate(tree.data["DBH"],
tree.data[,c("Plot", "Sp_code")],
length)
names(olddensity2.data)[3] <- "Stem.count"
names(olddensity2.data.subset)[3] <- "Stem.count"
names(density2.data)[3] <- "Stem.count"
# -------------------------------------
# Subsetting the 4 2017 plots
olddensity.data.subset2 <- olddensity.data[olddensity.data$Plot %in% plot.list,]
olddensity2.data.subset2 <-olddensity2.data[olddensity2.data$Plot %in% plot.list,]
# --------------------------------------
# Recoding plots to reflect the appropraite corner
density.data$Plot <- recode(density.data$Plot, " 'A1'='N115'; 'B5'='U134'; 'C6'='HH115'; 'D1'='B127' ")
density.data$Year <- 2017
olddensity.data.subset2$Year <- 2011
names(density.data)[2] <- "Species"
# Adding stand letter
olddensity.data.subset.stand <- merge(olddensity.data.subset, stand.data, by = "Plot")
density.data.stand <- merge(density.data, stand.data, by = "Plot")
olddensity.data.subset.stand$Year <- 2011
# Combining the density data
density2.all <- rbind(density.data, olddensity.data.subset2)
density.all <- rbind(density.data.stand, olddensity.data.subset.stand)
# -------------------------------------
# Calculating things needed for 2011 error bars
# Currently have all basal areas added together
# Divided by area to get density per species per plot
# I need to add density per species per plot to get density per stand per plot
# Can use aggregate probably
# Then divide by number of plots in the stand to get average density
# --------------------------------------
# Pretty graphs
library(ggplot2)
# Canopy Distributions based on plot
ggplot(tree.data) +
geom_bar(aes(Canopy, fill=Sp_code)) +
facet_wrap(~ Plot)
# Tree distribution based on plot
ggplot(alltree.data) +
geom_point(aes(x=X, y=Y, color=Sp_code, size=DBH)) +
facet_wrap(~ Plot)
ggplot(alltree.data) +
geom_point(aes(x=X, y=Y, color=Sp_code, size=BA)) +
facet_wrap(~ Plot)
ggplot(alltree.data) +
geom_point(aes(x=X, y=Y, color="blue", size=BA)) +
geom_point(aes(x=X, y=Y, color="red", size=DBH)) +
facet_wrap(~ Plot)
# Correlation between diameter and height
ggplot(alltree.data, aes(x=DBH, y=Height)) +
geom_point(aes(color=Sp_code))
# Species density per plot from old and new data
ggplot(olddensity.data.subset2, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_wrap(~ Plot)
ggplot(density.data, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_wrap(~ Plot)
# Comparing species density in the four plots between years
ggplot(data=density2.all, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ Plot, scales="free")
# Graphing error bars for the density in 2011 stands
geom_errorbar(data=d, mapping=aes(x=, ymin=, ymax=))
# Comparing species density between stands and 2017 plots
# I don't think it works
ggplot(data=density.all, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ stand, scales="free")
ggplot(data=density2.all, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ Plot, scales="free")
alltree.data$BA
oldtree.data[,"BA"]
density.data
olddensity.data.subset$BA.tot
oldtree.data[,"BA"]
olddensity.data
density.data$BA.tot
olddensity.data.subset$BA.tot
alltree.data$BA
density.data
olddensity.data.subset
oldtree.data.subset[,"BA"]
olddensity.data.subset <- aggregate(as.numeric(oldtree.data.subset[,"BA"]),
oldtree.data.subset[,c("Plot", "Species")],
sum)
olddensity.data.subset
oldtree.data.subset[oldtree.data.subset$Plot == "HH115"]
oldtree.data.subset[oldtree.data.subset$Plot == "HH115",]
test <- aggregate(as.numeric(oldtree.data.subset[,"BA"]),
oldtree.data.subset[,c("Plot", "Species")],
sum)
test
oldtree.data.subset[,"BA"]
oldtree.data.subset[oldtree.data.subset$Plot == "HH115",]
density.data
test <- aggregate(as.numeric(oldtree.data.subset[,"BA"]),
oldtree.data.subset[,c("Plot", "Species")],
length)
test
test <- aggregate(as.numeric(oldtree.data.subset[,"DBH"]),
oldtree.data.subset[,c("Plot", "Species")],
sum)
test
test <- aggregate(as.numeric(oldtree.data.subset[,"DBH"]),
oldtree.data.subset[,c("Plot", "Species")],
sum)
test
oldtree.data.subset[oldtree.data.subset$Plot == "HH115",]
test <- aggregate(as.numeric(oldtree.data.subset[,"DBH"]),
oldtree.data.subset[,c("Plot", "Species")],
length)
test
oldtree.data[
oldtree.data
test <- aggregate(as.numeric(oldtree.data.subset[,4]),
oldtree.data.subset[,c("Plot", "Species")],
sum)
test
test <- aggregate(as.numeric(oldtree.data.subset[,3]),
oldtree.data.subset[,c("Plot", "Species")],
sum)
test
test <- aggregate(as.numeric(oldtree.data.subset[,3]),
oldtree.data.subset[,c("Plot", "Species")],
length)
test
test <- aggregate(as.numeric(oldtree.data.subset[,3]),
oldtree.data.subset[,c("Plot", "Species")],
max)
test
oldtree.data.subset[,3]
as.numeric(oldtree.data.subset[,3]
test <- aggregate(as.numeric(oldtree.data.subset[,3]),
oldtree.data.subset[,c("Plot", "Species")],
max)
test
oldtree.data.subset[,3]
oldtree.data.subset[oldtree.data$Plot == "HH115",3]
oldtree.data$Plot == "HH115"
oldtree.data.subset[oldtree.data$Plot == "HH115",]
oldtree.data.subset[oldtree.data.subset$Plot == "HH115",]
oldtree.data.subset[oldtree.data.subset$Plot == "HH115",3]
test <- aggregate(as.numeric(oldtree.data.subset[oldtree.data.subset$Plot == "HH115",3]),
oldtree.data.subset[,c("Plot", "Species")],
max)
test <- aggregate(as.numeric(oldtree.data.subset[oldtree.data.subset$Plot == "HH115",3]),
list(oldtree.data.subset[,"Species"]),
max)
list(oldtree.data.subset[,"Species"])
test <- aggregate(as.numeric(oldtree.data.subset[oldtree.data.subset$Plot == "HH115",3]),
list(oldtree.data.subset[oldtree.data.subset$Plot == "HH115","Species"]),
max)
test
oldtree.data.subset[oldtree.data.subset$Plot == "HH115",3]
test <- aggregate(as.numeric(oldtree.data.subset[oldtree.data.subset$Plot == "HH115",4]),
list(oldtree.data.subset[oldtree.data.subset$Plot == "HH115","Species"]),
max)
test
oldtree.data.subset[oldtree.data.subset$Plot == "HH115",4]
?max
max(oldtree.data.subset[oldtree.data.subset$Plot == "HH115",4])
max(as.numeric(oldtree.data.subset[oldtree.data.subset$Plot == "HH115",4]))
oldtree.data.subset[oldtree.data.subset$Plot == "HH115",4]
as.numeric(oldtree.data.subset[oldtree.data.subset$Plot == "HH115",4])
max(as.numeric(as.character(oldtree.data.subset[oldtree.data.subset$Plot == "HH115",4])))
olddensity.data <- aggregate(as.numeric(as.character(oldtree.data[,"BA"])),
oldtree.data[,c("Plot", "Species")],
sum)
olddensity.data.subset <- aggregate(as.numeric(as.character(oldtree.data.subset[,"BA"]),
oldtree.data.subset[,c("Plot", "Species")],
sum)
density.data <- aggregate(as.numeric(as.character(alltree.data[,"BA"])),
alltree.data[,c("Plot", "Sp_code")],
sum)
olddensity.data <- aggregate(as.numeric(as.character(oldtree.data[,"BA"])),
oldtree.data[,c("Plot", "Species")],
sum)
olddensity.data.subset <- aggregate(as.numeric(as.character(oldtree.data.subset[,"BA"])),
oldtree.data.subset[,c("Plot", "Species")],
sum)
density.data <- aggregate(as.numeric(as.character(alltree.data[,"BA"])),
alltree.data[,c("Plot", "Sp_code")],
sum)
names(olddensity.data)[3] <- "BA.tot"
names(olddensity.data.subset)[3] <- "BA.tot"
names(density.data)[3] <- "BA.tot"
# Actually converting to density
# Area for old plots was .025 ha, based on IMLS report sampling protocal
# Area for new plots is 400 m2, .04 ha
olddensity.data$Density <- olddensity.data$BA.tot/250 # Units m2/ha
olddensity.data.subset$Density <- olddensity.data.subset$BA.tot/250 # Units m2/ha
density.data$Density <- density.data$BA.tot/400 # Units m2/ha
# Summing number of stems per plot per species
olddensity2.data <- aggregate(oldtree.data[,"BA"],
oldtree.data[,c("Plot", "Species")],
length)
olddensity2.data.subset <- aggregate(oldtree.data.subset[,"BA"],
oldtree.data.subset[,c("Plot", "Species")],
length)
density2.data <- aggregate(tree.data["DBH"],
tree.data[,c("Plot", "Sp_code")],
length)
names(olddensity2.data)[3] <- "Stem.count"
names(olddensity2.data.subset)[3] <- "Stem.count"
names(density2.data)[3] <- "Stem.count"
# -------------------------------------
# Subsetting the 4 2017 plots
olddensity.data.subset2 <- olddensity.data[olddensity.data$Plot %in% plot.list,]
olddensity2.data.subset2 <-olddensity2.data[olddensity2.data$Plot %in% plot.list,]
# --------------------------------------
# Recoding plots to reflect the appropraite corner
density.data$Plot <- recode(density.data$Plot, " 'A1'='N115'; 'B5'='U134'; 'C6'='HH115'; 'D1'='B127' ")
density.data$Year <- 2017
olddensity.data.subset2$Year <- 2011
names(density.data)[2] <- "Species"
# Adding stand letter
olddensity.data.subset.stand <- merge(olddensity.data.subset, stand.data, by = "Plot")
density.data.stand <- merge(density.data, stand.data, by = "Plot")
olddensity.data.subset.stand$Year <- 2011
# Combining the density data
density2.all <- rbind(density.data, olddensity.data.subset2)
density.all <- rbind(density.data.stand, olddensity.data.subset.stand)
#
ggplot(data=density.all, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ stand, scales="free")
ggplot(data=density2.all, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ Plot, scales="free")
density.all
density.error <- aggregate(density.all$Density,
density[,c("stand", "Species", "Year")],
sum)
density.error <- aggregate(density.all$Density,
density.all[,c("stand", "Species", "Year")],
sum)
density.error
stand.data
names(stand.data)[2] <- "Stand"
stand.data
olddensity.data <- aggregate(as.numeric(as.character(oldtree.data[,"BA"])),
oldtree.data[,c("Plot", "Species")],
sum)
olddensity.data.subset <- aggregate(as.numeric(as.character(oldtree.data.subset[,"BA"])),
oldtree.data.subset[,c("Plot", "Species")],
sum)
density.data <- aggregate(as.numeric(as.character(alltree.data[,"BA"])),
alltree.data[,c("Plot", "Sp_code")],
sum)
names(olddensity.data)[3] <- "BA.tot"
names(olddensity.data.subset)[3] <- "BA.tot"
names(density.data)[3] <- "BA.tot"
# Actually converting to density
# Area for old plots was .025 ha, based on IMLS report sampling protocal
# Area for new plots is 400 m2, .04 ha
olddensity.data$Density <- olddensity.data$BA.tot/250 # Units m2/ha
olddensity.data.subset$Density <- olddensity.data.subset$BA.tot/250 # Units m2/ha
density.data$Density <- density.data$BA.tot/400 # Units m2/ha
# Summing number of stems per plot per species
olddensity2.data <- aggregate(oldtree.data[,"BA"],
oldtree.data[,c("Plot", "Species")],
length)
olddensity2.data.subset <- aggregate(oldtree.data.subset[,"BA"],
oldtree.data.subset[,c("Plot", "Species")],
length)
density2.data <- aggregate(tree.data["DBH"],
tree.data[,c("Plot", "Sp_code")],
length)
names(olddensity2.data)[3] <- "Stem.count"
names(olddensity2.data.subset)[3] <- "Stem.count"
names(density2.data)[3] <- "Stem.count"
# -------------------------------------
# Subsetting the 4 2017 plots
olddensity.data.subset2 <- olddensity.data[olddensity.data$Plot %in% plot.list,]
olddensity2.data.subset2 <-olddensity2.data[olddensity2.data$Plot %in% plot.list,]
# --------------------------------------
# Recoding plots to reflect the appropraite corner
density.data$Plot <- recode(density.data$Plot, " 'A1'='N115'; 'B5'='U134'; 'C6'='HH115'; 'D1'='B127' ")
density.data$Year <- 2017
olddensity.data.subset2$Year <- 2011
names(density.data)[2] <- "Species"
# Adding stand letter
olddensity.data.subset.stand <- merge(olddensity.data.subset, stand.data, by = "Plot")
density.data.stand <- merge(density.data, stand.data, by = "Plot")
olddensity.data.subset.stand$Year <- 2011
# Combining the density data
density2.all <- rbind(density.data, olddensity.data.subset2)
density.all <- rbind(density.data.stand, olddensity.data.subset.stand)
# -------------------------------------
# Calculating things needed for error bars
# Currently have all basal areas added together
# Divided by area to get density per species per plot
# I need to add density per species per plot to get density per stand per plot per year
# Can use aggregate probably
# Then divide by number of plots in the stand to get average density
density.error <- aggregate(density.all$Density,
density.all[,c("stand", "Species", "Year")],
sum)
density.error <- aggregate(density.all$Density,
density.all[,c("Stand", "Species", "Year")],
sum)
density.error
names(density.error)[4] <- "Density"
density.error2 <- aggregate(density.all$Density,
density.all[,c("Stand", "Species", "Year")],
sum)
names(density.error2)[4] <- "Density"
density.error3 <- aggregate(density.all$Density,
density.all[,c("Stand", "Species", "Year")],
length)
density.error3
density.all
density.error3
names(density.error30)[4] <- "Plot.count"
names(density.error3)[4] <- "Plot.count"
density.error3
density.error <- merge(density.error2, density.error3)
density.error
density.error$Mean <- density.error$Density/density.error$Plot.count
density.error$Mean
density.error
density.error4 <- aggregate(density.all$Density,
density.all[,c("Stand", "Species", "Year")],
sd)
density.error4
names(density.error4)[4] <- "St.dev"
density.error <- merge(density.error2, density.error3, density.error4)
density.error2 <- aggregate(density.all$Density,
density.all[,c("Stand", "Species", "Year")],
mean)
names(density.error2)[4] <- "Density"
density.error3 <- aggregate(density.all$Density,
density.all[,c("Stand", "Species", "Year")],
sd)
names(density.error3)[4] <- "St.dev"
density.error <- merge(density.error2, density.error3)
density.error
density.error$Ymin <- density.error$Density - density.error$St.dev
density.error$Ymax <- density.error$Density + density.error$St.dev
density.error
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Density, ymin=Ymin, ymax=Ymax)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ stand, scales="free")
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Density, ymin=Ymin, ymax=Ymax)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ Stand, scales="free")
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Density, ymin=Ymin, ymax=Ymax)) +
geom_col(aes(Species, Density))
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Density, ymin=Ymin, ymax=Ymax))
ggplot(data=density.error, aes(fill=Species)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ Stand, scales="free")
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Density, ymin=Ymin, ymax=Ymax)) +
geom_col(aes(Species, Density)) +
facet_grid(Year ~ Stand, scales="free")
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Density, ymin=Ymin, ymax=Ymax))
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Density, ymin=Ymin, ymax=Ymax)) +
geom_col(aes(Species, Density))
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Density, ymin=Ymin, ymax=Ymax)) +
facet_grid(Year ~ Stand, scales="free")
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Species, ymin=Ymin, ymax=Ymax)) +
facet_grid(Year ~ Stand, scales="free") +
geom_col(aes(Species, Density))
ggplot(density.error, aes(fill=Species)) +
facet_grid(Year ~ Stand, scales="free") +
geom_col(aes(Species, Density)) +
geom_errorbar(aes(x=Species, ymin=Ymin, ymax=Ymax))
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Species, ymin=Ymin, ymax=Ymax)) +
facet_grid(Year ~ Stand, scales="free") +
geom_col(aes(Species, Density))
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Species, ymin=Ymin, ymax=Ymax), na.rm = TRUE) +
facet_grid(Year ~ Stand, scales="free") +
geom_col(aes(Species, Density))
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Species, ymin=Density, ymax=Ymax), na.rm = TRUE) +
facet_grid(Year ~ Stand, scales="free") +
geom_col(aes(Species, Density))
ggplot(density.error, aes(fill=Species)) +
facet_grid(Year ~ Stand, scales="free") +
geom_col(aes(Species, Density)) +
geom_errorbar(aes(x=Species, ymin=Ymin, ymax=Ymax), na.rm = TRUE)
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Species, ymin=Density, ymax=Ymax), na.rm = TRUE) +
facet_grid(Year ~ Stand, scales="freex") +
geom_col(aes(Species, Density))
ggplot(density.error, aes(fill=Species)) +
geom_errorbar(aes(x=Species, ymin=Density, ymax=Ymax), na.rm = TRUE) +
facet_grid(Year ~ Stand, scales="free_x") +
geom_col(aes(Species, Density))
